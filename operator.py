# 연산자
# 특정 작업을 하기위해 사용하는 기호를 의미

# 산술 연산자
# 간단한 사칙연산과 기타 산술연산을 지원
# =, +, -, *, /, //(몫), %(나머지), **(제곱)
a=3
b=5
print(a+b, a-b, a*b, a/b)
print(b/a, b//a, b%a)

# 산술연산자 우선순위
# 연산자간의 연산 실행 순서를 결정
# 기본적인 우선순위를 무시하고 임의로
# 연산순서를 결정하고 싶다면 괄호를 사용하면됨
x,y,z = 2,3,4
print(x+y-z, x+y*z, x*y/z)
# +,- 보다 *,/ 를 먼저 연산
print((x+y)*z, (x-y)/z)
# ()를 이용해서 연산순서 바뀜

# 복합 연산자
# 산술연산자와 대입연산자를 복합적으로 사용한 연산자
# +=, -=, *=, /=, //=, %=, **=
x = 10
x += 1   # x = x + 1
print(x)

# 참고로 파이썬에는 증감 연산자는 없음
print(--x)
print(++x)

# 비교 연산자
# 좌우 피연산자 사이의 상대적인 크기를 판단
# 결과는 논리값 True, False 중 하나가 출력됨
# ==, !=, >, <, >=, <=
a, b = 100, 500
print(a == b, a != b, a > b, a < b,
      a >= b, a <= b)

# 논리 연산자
# 주어진 표현식의 논리값을 판단하는 연산자
# 결과는 논리값 True, False 중 하나가 출력됨
# and, or, not
x = (a > 100)
y = (b < 200)
print(x and y, x or y, not x, not y)

# 연산자 우선순위
# ()
# **
# * / % //
# + -
# == != > < >= <=
# not and or

# 780 달러와 650 유로 노트북 중
# 달러로 구매했을때와 유로로 구매했을때
# 어느것이 더 싼지 알아보세요
# 단, 2020.06.22 기준 환율을 적용하세요
# exchange-rate.org

eur = 1361.65
usd = 1215
print(780 * usd >= 650 * eur)

# 하루가 86400초라면 1234567890 초는 몇일일까?
# 1시간이 3600초라면 98765초는 몇시간인가?
# 1분은 60초라 할 때 12345초는 몇분인가?
sec = 1
min = sec * 60
hour = min * 60
day = hour * 24

print( (1234567890 * sec) / day)
print( 98765 // hour)
print( 12345 // min)

# 잔돈 거슬러 주는 프로그램을 작성하세요
# 구매액은 12345원이고 지불액이 50000 일 때
# 잔돈은 어떻게 지불해야 하는가?
c50000 = 0
c10000 = 0
c5000 = 0
c1000 = 0
c500 = 0
c100 = 0
c50 = 0
c10 = 0

pay = 12345
money = 50000
charge = money - pay

c50000 = charge // 50000
charge = charge % 50000

c10000 = charge // 10000
charge = charge % 10000

c5000 = charge // 5000
charge = charge % 5000

c1000 = charge // 1000
charge = charge % 1000

print(f'5만원 : {c50000}, 1만원 : {c10000},'
      f'5천원 : {c5000}, 1천원 : {c1000},'
      f'5백원 : {c500}, 1백원 : {c100},'
      f'5십원 : {c50}, 1십원 : {c10}')






















