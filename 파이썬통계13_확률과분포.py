# -*- coding: utf-8 -*-
"""파이썬통계13-확률과분포.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1y2kly9jI1JpzjHxc8khYDBbsS_XTb_C4

# 추론통계학 
어떤 일에 대해 미래에 발생할 가능성을 계산

# 표본공간sample space
* 어떤 특정 실험 또는 무작위 실험을 했을때
* 측정/관찰 가능한 모든 결과들의 집합을 의미
* set of all outcomes
* result of that experiment

# 한편, 수집한 표본은 표본공간의 부분집합임

* ex) 동전을 반복해서 2번 던지는 실험을 
* 시행한다고 했을때 표본 공간은? 4개
 + {(앞,앞)(앞,뒤)(뒤,뒤)(뒤,앞)}  
  
* ex) 주사위를 반복해서 2번 던지는 실험을 
* 시행한다고 했을때 표본 공간은? 36개
 + {(1,1),... ...,(6,6)}

# 사건event
* 어떤 조건을 만족하는 특정한 표본들의 집합
* 표본공간의 부분집합
* ex) 주사위를 하나 던졌을때,
* 짝수인 표본들의 집합은?
 + 표본공간 : 6개 {1,2,3,4,5,6}
 + 사건 (짝수) : 3개 {2,4,6}

# 확률 probability
* 동일한 조건하에서 동일한 실험을 무한히
* 반복하여 시행할때 어떤 특정한 사건이 발생하는 비율
* 특정사건확률 = 특정사건 수 / 모든사건 수

# ex) 동전을 하나 던졌을때 앞면이 나올 가능성(확률)은?
 + 표본공간 : {앞, 뒤}
 + 사건 : {앞}
 + 앞이 나올 확률 : 1/2 = 0.5

# ex) 주사위를 하나 던졌을때, 1이 나올 확률은?
 + 표본공간 : 6개 {1,2,3,4,5,6}
 + 사건 (1) : 1개 {1}
 + 1이 나올 확률 : 1/6 = 0.16666

## 따라서, 확률은 어떤 실험을 했을때
## 나올수 있는 모든 경우의 수(표본공간) 중
##어떤 특정 조건을 만족하는 사건이 발생할 비율을 의미

# 통계에 확률이 필요한 이유
# 의사결정에는 불확실성이 내제되므로
# 알려진 위험은 과학적으로 분석되어야 함
# -> 불확실성 이론이라는 불리는 확률론이
# 이러한 분석에 도움됨

# 확률 개론
* 어떤 사건이 일어날 상대적 개연성을 나타낸 0,1 사이의 값 
 + => 70%, 0.35등으로 표현
 + 사건발생 : 1 (확실하게 일어남)
 + 사건 미발생 : 0 (절대로 일어나지 않음)

# 확률 부여 방법
* 고전적 확률 : 덧셈법칙/여의법칙/곱사건,조건부확률 
* 경험적 확률 : 대수의 법칙
* 주관적 확률 (!!!) : 베이즈 정리
 + 사전확률,사후확률 - 나이브 베이즈

# 확률변수random variable
* 변수variable 
* => 특정 조건/상황에 따라 변하는 값을 의미

# 확률변수 : 확률에 따라 변하는 값
* 즉, 무작위 실험을 했을때 
* 특정 확률로 발생하는 각각의 결과를 
* 수치적 값으로 표현한 것
* 일정한 확률값이 고정적으로 부여된 변수

# 예: 동전을 무작위로 2번 던져서 앞/뒤가 나오는 실험을 시행
* => 앞이 나올 확률 : 1/2
* => 뒤이 나올 확률 : 1/2
* ==> 확률변수 : 1/2

# 예: 주사위를 1개 던졌을때, 각각의 눈금이 나올 확률변수는?
* => 눈금 1이 나올 확률 : 1/6
* => 눈금 2이 나올 확률 : 1/6
* => ... ...
* => 눈금 6이 나올 확률 : 1/6
* ==> 따라서, 확률변수는 1/6

# 한편, 확률변수는 데이터의 특성에 따라
* 이산discrete 확률변수(정수)와
* 연속continuous 확률변수(실수)로 나뉨
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# 주사위 2개를 던졌을 때 나올 수 있는 모든 눈금의 합에 대한 확률
x = np.arange(2,12+1)
y = [1/36, 2/36, 3/36, 4/36, 5/36, 6/36, 5/36, 4/36, 3/36, 2/36, 1/36]

plt.plot(x, y, color='red')

"""# 확률함수 
* 확률변수가 일어날 확률을 나타내는 함수
* 이를 통해 특정사건이 일어날 확률을 
* 계산(예측)할 수 있음
* 즉, 확률함수를 이용해서 특정사건의 확률을 
 계산할 수 있고 그 확률을 바탕으로 추론통계의 
 기초가 되는 통계적 검정을 할 수 있음

# 확률질량함수와 누적분포함수등이 있음

# ex) 주사위 2개를 던져 나온 두 눈의 합이 5이상 8이하로 나올 확률은?
* f(5) + f(6) + f(7) + f(8) = 
* 4/36 + 5/36 + 6/36 + 5/36 = 20/36 = 0.55

# 파이썬에서 확률분포기능을 사용하려면 scipy를 사용하면됨

# 확률분포
* 통계학 이론은 확률론에 근거
* 모든 확률변수는 특정한 확률분포를 가짐

* 일정한 패턴으로 확률값이 퍼져있는 것을 의미
* 학률변수의 유형에 따라 
* 이산/연속 확률분포로 분류

# 이산 확률분포
* 베루누이 / 이항binom / 다항multinom
* 초기하hyper / 기하geom / 포아송pois / 음이항 

# 연속 확률분포
* 균등unif / 정규분포norm / 지수 exp / F분포f
* 감마 / 베타 / t분포t / 카이제곱chisq

# 연속확률분포
* 특정범위내 발생가능한 값들이 무한대로 많은 경우의 확률분포

* 이산확률분포는 정수로 딱 셀 수있기 때문에
  성공/실패 횟수를 세서 횟수에 대한 확률을 구함

* 반면, 연속확률분포는 정수로 셀수 없기 때문에
  횟수에 대한 개념이 없음

* 따라서, 구하고자 하는 사건을
 구간으로 산출하고, 
 구간의 면적으로 확률을 구함

* 즉, 사건을 그래프로 산출하고
  그래프의 면적으로 확률을 계산

* 이때, 구간의 총면적은 1 또는 100%이다
  (=> 확률의 총합 1 또는 100%이므로)

* 한편, 면적(확률)을 구하려면
  x축 구간 a,b와 y축 구간 c,d를 알아야 함

* 예를 들어 구하고자 하는 사건이
  총 면적의 절반이라면 
  확률은 0.5 또는 50%라는 의미임

* 하지만, 총면적의 모양이 
항상 네모 반듯하지는 않음
정규분포의 경우, 평균에 가까울수록 
분포가 많고 멀수록 분포가 감소하는
종모양을 띄고 있음
이렇듯 연속확률분포에 따라 
총면적 모양이 다름

* 중요한 3가지 연속확률분포
정규분포, t분포, 카이제곱(x^2)분포
"""

# 파이썬으로 정규분포 곡선 나타내기
# x의 범위를 -5 ~ 5 까지 100등분하여 지정하고
# 각 x에 해당하는 값을 정규분포 수식을 입력해서 y 를 구함
x = np.linspace(-5, 5, 100+1)
y = (1 / np.sqrt(2 * np.pi)) * np.exp(-x ** 2 / 2)

plt.plot(x,y)
plt.grid()

# scipy 의 정규분포 함수를 이용해서 그래프를 그려봄
import scipy.stats as stats

y = stats.norm(0,1).pdf(x)

plt.plot(x, y, color='red')
plt.grid()

