# -*- coding: utf-8 -*-
"""파이썬통계14-가설과검정.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kdFXfIT_ME1aFlR1bw6-cx2Gso08ZAC9

# 추정
```
보통 어떤 집단(모집단)의 특징을 알고싶다 
=> 전수조사

현실에서는 시간/비용상의 문제 때문에
모든 구성원 대상 조사는 어려움 
=> 표본 이용(일부조사)

알고자 하는 모집단의 특징을 숫자로 표현
=> 모수(평균,분산,비율, 표준편차)

표본으로 뽑은 데이터 - 통계량, 추정치
표본의 통계량을 "'모수'가 이럴것이다"라고
추리 => 추정


ex) 한국 성인 남자의 평균 키 파악
모집단 : 한국 성인 남자
모수 : 평균

=> 한국 성인남자 모두를 조사할 수 없으니
표본(남자 1000명)을 선정해서 평균을 구함
=> 표본의 평균으로 모집단의 평균을 추리함  

추정은 일부 데이터로 전체를 추리하기 
때문에 100% 정답은 아니고, 
일부 오차는 존재함
추정에는 점추정, 구간 추정이 있음
```

# 점추정
```
추정치를 하나의 값(점)으로 표현
성인 남자 평균 키 - 172.38cm(통계량)
그런데, 진짜 한국 남성의 평균키가 172cm일까?
당연히 그럴 확률은 희박 
=> 표본수 작음, 오차 존재
따라서, 특성상 점추정은 신뢰하기 어려움

ex) 서울 지역내 하이마트에서 UHD TV를 
구매한 고객의 평균 나이 추정
경주를 방문한 관광객들의 평균 지출액 추정
```

# 구간 추정  
```
추정치를 일정구간으로 설정
즉, 신뢰도(신뢰수준)를 제시하면서 
상한값과 하한값으로 추정

성인 남자 평균 키 - 172.38cm(통계량)
=> 167 ~ 177cm (+-5)
이렇게 하면, 이 구간에 모수가 
포함될 확률이 높아짐
추정치의 신뢰도를 높이고, 점추정치의 한계를 
극복하기 위해 구간 추정을 사용함

ex) 서울 지역 IT노동자의 연간 평균 급여가
200만원이다 (점추정 - 신뢰도 하락)

서울 지역 IT노동자의 연간 평균 급여가
180 ~ 220만원 사이에 있을 가능성이 85%이다 
(구간추정 -어느 정도 신뢰도 보장)
```

# 신뢰구간
```
점추정은 특성상 신뢰도가 떨어짐 
=> 구간추정으로 보완
그러면, 구간추정시 어느정도까지 구간을
설정해야 할까?

성인 남자 평균 키에 대한 구간추정을
150~190으로 잡으면? => 너무 넓음
구간설정이 짧을수록 좋을까? 너무 짧아도 문제

너무 넓지도, 짧지않게 나름의 기준에 따라
신뢰가능한 구간을 설정 - 신뢰구간 사용

R에서는 t.test 함수를 사용
신뢰구간 = 표본평균 +- z값 * 표준오차

주어진 확률로 모집단의 모수가 존재할 것으로
예상되는 값의 범위 - 신뢰구간
이때, 주어진 확률은 '신뢰수준'이라 함

신뢰수준 - 표본으로부터 계산한 결과에 대해 
확실성 정도를 표현하는 것으로,
추정값으로 모수를 맞출 확률을 의미
90% ~ 99.9% 정도로 표현
```

# 추론통계의 두 갈래
```
모집단으로부터 표본을 추출해서
모집단의 특성을 나타내는 모수에 대한
여러 가지 정보를 얻음 : 추론통계
통계적 추론 = 추정 + 가설검정
```

# 가설검정
```
추론 통계학에서 중요하게 여기는 3가지
1. 표본집단은 모집단을 대표할 수 있나?
표본의 특성이 모집단을 잘 반영해야 함 
-> 대표성을 지녀야 함

2. 표본의 확률분포는 어떤가?
어떤 분포이냐에 따라 추정을 위한 기법이 다름
단, 표본의 수가 많아지면 정규분포에 근사
    
3. 추정된 결과는 신뢰할 만 한가?
추정된 결과를 활용할 지 결정하는 요소
```

# 통계적 가설검정
```
세상에는 수 많은 분야에 걸쳐 
다양한 이론/관념이 존재
이러한 이론/관념들은 그 자체로 정답이라기 
보다는 '이럴것이다'라는 하나의 가설에 불과
정답은 아니고 가설이므로 
항상 불완전함이 내포

한편, 불완전함을 채우기 위해 
새로운 가설이 등장하기도 함
ex) 우주에 대한 가설
  신화적 상상 -> 천동설 -> 지동설

그런데, 새로운 가설이 이전가설보다
늘 합리적이고 신뢰적일까? 
오히려 이전 가설이 더 합리적일수도 있음

따라서, 두 가설중 어떤 가설이 더 신뢰성있고
정확한지 판단해야 할 필요가 있음
=> 이 과정을 가설검정이라 함
```

# 통계적 관점의 가설
```
검정을 전제로 모집단의 모수에 대한 
진술 또는 가정

ex) 하이마트에서 일하는 모든 종업원의
평균임금은 200만원이다 - 가설

이 가설이 옳은지 알아보기 위해서는
모든 영업점을 다 돌아봐야 함 - 사실상 불가능

=> 일정 수의 표본을 추출해서
표본 통계량을 조사하고 결정규칙에 따라
가설을 채택하거나 기각할 수 있음

표본 통계량 조사 후 :
 1) 표본평균 100만원 -> 가설기각
 2) 표본평균 196만원 -> 가설채택? 오차 허용여부는?
```
# 통계적 관점의 검정
```
가설이 타당성 있는 진술인지 결정하기 위해
표본증거와 확률이론에 기반하여 수행하는 과정

이러한 검정은 수학적 증명을 동반하지 않고
받아들일 만한 확률적 증거만을 제공
따라서, 해석능력, 경험이 
어느정도 동반되어야 함
```

# 가설검정의 6가지 절차
```
귀무/대립가설 설정 -> 유의수준 선정
-> 검정 통계량 선택 -> 결정규칙 수립
-> 표본추출, 결론도출 -> 결과 해석

1. 귀무/대립가설 설정
검정하고자 하는 가설을 설정

귀무(null)가설H0
수치증거를 검정하기 위한 목표로 만들어진
모집단 모수값에 대한 진술(가정)

대립(alternative)가설H1
표본 데이터 정보로 귀무가설이 거짓이라는
충분한 증거를 제시할 때 채택되는 진술

ex) 상업적 항공기의 평균수명은 25년인지
알고 싶다
귀무가설 : 평균수명은 25년이다 (=)
대립가설 : 평균수명은 
    25년이 아니다/25년이상/25년이하(>,<,!=)


2. 유의수준 선정
귀무가설을 기각하게 되는 확률
일반적으로 소비자 관련 - 0.05
품질보증 관련 - 0.01
정치 여론 조사관련 - 0.10

ex) 전자회로기판PCB 생산업체에서
불량률이 6% 이하일때 계약업체로 선적해서
납품한다는 품질보증계약 체결함

귀무가설H0: 불량률 6% 이하 - 선적 o
대립가설H1: 불량률 6% 초과 - 선적 x

4000개의 회로판에서 표본 50개 추출
-> 4개가 불량 -> 0.08 -> 8% -> 선적x
그런데, 4개의 불량이 
전체 4000개에서 유일하다면? 
=> 불량률 0.1% -> 선적취소는 잘못된 결정
=> 귀무가설이 옳지만 기각했음 (제1종오류(알파))

4000개의 회로판에서 표본 50개 추출
-> 2개가 불량 -> 0.04 -> 4% -> 선적o
그런데, 48개 정상품이 전체 4000개에서 유일
-> 불량률 98.8% -> 선적허용은 잘못된 결정
=> 귀무가설이 틀리지만 기각못함 (제2종오류(베타))


3. 검정 통계량 선택
귀무가설을 기각할 것인지를 결정하기 위해서
표본으로부터 계산된 값

일반적으로 z검정값, t검정값등을 사용
상황에 따라 F/카이제곱 검정값도 사용


4. 결정규칙 수립 - 단측/양측 검정
귀무가설이 기각될 특정 조건과
기각되지 않을 조건을 명시
일반적으로 기각영역은 귀무가설이 
발생할 가능성이 없도록 작게 설정

단측검정 : one-side, 한쪽 꼬리 검정
방향성(크다/작다)이 대립가설에 
포함되는 경우 시행하는 검정

우측(오른쪽) 단측검정
ex) 농심의 '오징어다리' 스낵의 포장중량이
500g미만인지 검정한다고 가정

귀무가설 : 포장중량이 500g미만
대립가설 : 포장중량이 500g이상

유의수준 0.05일때 귀무가설이 
기각될 영역(기각역)은 
임계값 1.645 기준 오른쪽 영역

임계값 : 귀무가설을 채택하거나
         기각할 영역 사이의 분기점


좌측(왼쪽) 단측검정
ex) 현대 자동차에 장착되는 타이어의
평균 수명이 50000km 이상인지 검정

귀무가설 : 평균 수명이 50000km 이상
대립가설 : 평균 수명이 50000km 미만

유의수준 0.05일때 귀무가설이 
기각될 영역(기각역)은 
임계값 -1.645 기준 왼쪽 영역


양측검정 - two sided, 양쪽 꼬리 검정
방향성(크다/작다)이 대립가설에 
포함되지 않는 경우 시행하는 검정

ex) 회계사의 연평균 수입은 5500만원인가?
귀무가설 : 연평균 수입은 5500만원 이다
대립가설 : 연평균 수입은 5500만원 아니다

유의수준 0.05일때 귀무가설이 기각된 영역은
임계값 -1.96(0.025)/1.96(0.025) 기준 
양쪽 영역임

5. 결론도출 
만약, 계산된 검정 통계량 z값이 
기각역을 넘는 값이라면 (ex: 2.34)
귀무가설은 기각됨

계산된 검정 통계량 z값이 
기각역을 넘지 않는 값이라면 (ex: 0.71)
귀무가설은 채택됨

하지만, 1종오류/2종오류가 발생할 수도 있음


유의확률 p-value
귀무가설이 참이라고 가정할때
주어진 데이터가 관측될 확률
또는 극단적인 데이터가 관측될 확률을 의미

따라서, '유의확률이 유의수준보다
작으면 귀무가설을 기각할 수 있음' (중요!)
```

![](https://github.com/ljg-95/bigdataset1/blob/master/t-table-1.png?raw=true)
```
6. 결과 해석
통계를 이용해서 가설검정이 모든 분야의
가설을 다 판단하지 못함
수학적 특성상 제약이 존재(표본의 편중)

판단의 의사결정시 수학적 방법을 
이용하는 것도 좋지만, 수학의 틀에서 벗어나
의사결정하는 것도 좋음
=> 동물적 직감, 영감을 이용

즉, 참/거짓이 존재하는 수학적 가설과는 
달리 통계적 가설은 참/거짓의 유무보다는
확률만 존재함 - 언제나 틀릴 가능성 내포

ex)
회계사의 연평균 수입은 5500만원인가?
귀무가설 : 연평균 수입은 5500만원 이다
대립가설 : 연평균 수입은 5500만원 아니다

결론 : 연평균 수입은 5500만원 이다 (x)
       연평균 수입이 5500만원일/아닐 
       확률이 다소 높다/낮다 (o)
```
"""

import numpy as np
import pandas as pd
from scipy import stats as stats
import matplotlib.pyplot as plt

# coffe.csv -> raw -> 주소창 복사
# https://raw.githubusercontent.com/ljg-95/bigdataset1/master/coffee.csv
# 가설검정 예 : 단일표본one-sample t-검정
# 성인의 평균키는 67.7(172cm)인치인지 알아보자
# 귀무가설 : 성인의 평균키는 67.6인치 이다!
# 대립가설 : 성인의 평균키는 67.6인치 아니다!
# 검정방법 : 양측검정
data = pd.read_csv('https://raw.githubusercontent.com/ljg-95/bigdataset1/master/coffee.csv')
data

# 대립가설 채택여부 확인 : ttest_1samp(표본,평균)
result = stats.ttest_1samp(data['height'],67.6)

# 대립가설 참여부 확인/귀무가설 기각 확인
# p-value 가 0.05보다 작을 경우 귀무가설 기각함
result  # p-value가 0.05보다 크므로 귀무가설 채택

# 학생들의 키가 평균 175cm 인가에 대한 가설검정
np.random.seed(2007221450)
heights = np.random.randint(low=162,high=182,size=50)
print(heights)

result = stats.ttest_1samp(heights,175)
result

"""# 두 표본 가설검정
```
단일표본의 비교문제는 하나의 모집단에서 추출된 하나의 표본에 대해 검정

그에 비해 두 표본 비교문제는 독립적(서로 관련없음)인 두 모집단으로 부터
각각 추출된 표본의 경우와 동일한 모집단으로부터 추출된 두 표본의 경우로
나누어 검정을 실시함 => 2개의 집단간의 차이가 의미 있는지 확인

일상에서는 단일 표본문제보다 더 많이 사용됨

ex) 남자와 여자간의 소득 차이 비교 (독립표본)
과외를 받기 전과 후의 성적 차이 비교 (짝 표본)
```
### 정규성 검정
```
데이터의 분포가 정규분포를 따르는지 알아보는 것을 의미
통계의 다양한 검정법은 데이터가 정규분포를 가정하고 수행됨
데이터가 충분히 크다면(보통 30 개 이상) 중심극한정리를 적용할수 있음
하지만, 그 이하일 경우 별도의 정규성 검정이 필요할 수 있음
단, 독립표본을 이용해서 가설검정을 실시하기 
위해서는 반드시 정규성, 등분산성이 만족되어야 함
=> shapiro.test, var.test 함수 이용
```
"""

# 단일표본 정규성 검정
# 표본의수가 2000민만인 경우 shapiro-Wilks 검정 실시
# pvalue가 0.05보다 크면 표본이 정규성을 띈다고 볼 수 있음
from scipy.stats import shapiro

samp = data['height'][:20]

stats.shapiro(samp)   # pvalue가 0.05보다 크므로 정규성을 띔

# 정규성 검정에 대한 시각화
plt.boxplot(samp,vert=0)
plt.grid()

# ex)독립표본 x, y 에 대해 정규성, 등분산성을 확인하시오
# x : 175,168,168,190,156,181,182,175,174,179
# y : 185,169,173,173,188,186,175,174,179,180
x = [175,168,168,190,156,181,182,175,174,179]
y = [185,169,173,173,188,186,175,174,179,180]

result1 = stats.shapiro(x)
result2 = stats.shapiro(y)
print(result1)
print(result2)

# 두 표본 등분산성 검정
# 두 표본의 분산(표준편차)이 비슷한지 여부를 알아봄
# levene 함수를 이용하거나 bartlett함수를 이용함
# pvalue가 0.05보다 크면 표본이 등분산성을 띈다고 볼수 있음
result1 = stats.levene(x,y)
result1 = stats.bartlett(x,y)
print(result1,result2)

# 독립표본x,y에 대해 평균의 차이가 존재하는지 t검정
# 독립표본 t검정 : ttest_ind(표본1, 표본2, 등분산성여부)
# 만일, 등분산성 검정을 실패하는 경우 equal_var=False로 설정
# pvalue 가 0.05보다 작은 경우 귀무가설 기각함
# 귀무가설 : x,y에 대해 평균의 차이가 존재하지않음 
# 대립가설 : x,y에 대해 평균의 차이가 존재함
result = stats.ttest_ind(x,y)
print(result)   # p-value : 0.355 => 귀무가설 채택 => 평균의 차이가 없음

# 자동차 연비데이터 mtcars에서 기어종류에 따라 평균연비의 차이가 존재하는지 독립표본 t검정을 시행하세요
# 귀무가설 : 기어의 종류에 따라 평균연비의 차이가 존재하지않음
# 대립가설 ; 기어의 종류에 따라 평균연비의 차이가 존재함
# 기어유형 : mtcars-am  (0:자동)
# 연비 : mtcars-mpg 
# https://raw.githubusercontent.com/ljg-95/bigdataset1/master/mtcars.csv
mtcars = pd.read_csv('https://raw.githubusercontent.com/ljg-95/bigdataset1/master/mtcars.csv')
auto = mtcars[mtcars['am']==0]['mpg']
manual = mtcars[mtcars['am']==1]['mpg']
print(auto, manual)

# 추출한 데이터중 12개만 가져와서 정규성, 등분산성 검정
x = auto[:12]
y = manual[:12]
result1 = stats.shapiro(x)
result2 = stats.shapiro(y)
result3 = stats.bartlett(x,y)
print(result1)  # 정규성 만족
print(result2)  # 정규성 만족
print(result3)  # 등분산성 만족

# 독립표본 t 검정 시행
result4 = stats.ttest_ind(x,y)
print(result4)
# pvalue 값이 0.05보다 작으므로 귀무가설 기각
# => 기어 종류에 따라 평균연비차이가 확률적으로 존재할 수 있음

"""![](https://github.com/ljg-95/bigdataset1/blob/master/t-table-1.png?raw=true)"""

# ex) 잔디 깍기 기계 생산 공장에서
# # 작업시간 단축을 위해 2가지 공정이 제안되었음
# A 공정방식은 5명의 근로자에 의해,
# B 공정방식은 6명의 근로자에 의해 
# 각각 테스트가 진행되었을때, 작업시간의 차이가
# 있는지 검정하시오. 유의수준 0.10을 사용한다

# A 공정 : 2 4 9 3 2 (단위: 분)
# B 공정 : 3 7 5 8 4 3
# 독립표본 t검정시 자유도df : (n1 - 1) + (n2 - 1)

# 유의수준 0.10을 사용한다
# 귀무가설 : 각 공정방식에 의한 평균작업시간의 차이가 없다
# 대립가설 : 각 공정방식에 의한 평균작업시간의 차이가 있다 

a = [2, 4, 9, 3, 2]
b = [3, 7, 5, 8, 4, 3]

"""# qqplot 
* 통계추론은 대부분 모집단이 정규분포를 따른다는 가정하게서 진행됨
* 수집데이터를 표준 정규분포의 분위수와 비교해서 그리는 그래프
* 데이터가 정규성을 띈다면 직선에 가까운 형태롤 그려짐
"""

# 정규성과 등분산성 검정
result1 = stats.shapiro(a)
result2 = stats.shapiro(b)
result3 = stats.bartlett(a,b)
print(result1)
print(result2)
print(result3)
# a 표본은 정규성을 확실하게 띈다고 보기에 어려울 수 있음

# 정규성 시각화
# 표본의 정규성ㅇ르 시각적으로 확인하려면
# 1. 상자수염 그래프
# 2. 확률밀도 그래프
# 3. qqplot 그래프
np.random.seed(2007231000)
n = 100
x1 = np.random.normal(0,1,n)  # 정규분포를 따르는 난수
x2 = np.random.exponential(2,n) # 지수분포를 따르는 난수
x3 = np.log1p(x2)  # 지수난수를 로그화 함

f, ax = plt.subplots(2,3,figsize=(12,6))
ax[0][0].boxplot(x1)
stats.probplot(x1,plot=ax[1][0]) # qqplot

ax[0][1].boxplot(x1)
stats.probplot(x2,plot=ax[1][1]) # qqplot

ax[0][2].boxplot(x1)
stats.probplot(x3,plot=ax[1][2]) # qqplot

print(stats.shapiro(x1))
print(stats.shapiro(x2))
print(stats.shapiro(x3))

# 독립표본 t 검정 실시
result4 = stats.ttest_ind(a,b)
print(result4)
# pvalue값이 0.05보다 크기 때문에 귀무가설 채택
# => 공정방식에 의한 평균 작업시강의 차이가 없다

"""# 확률밀도 그래프: seaborn의 distplot함수 이용"""

import seaborn as sns

sns.distplot(x1, fit=stats.norm)

sns.distplot(x2, fit=stats.norm)

sns.distplot(x3, fit=stats.norm)

# 등분산성 여부
sns.distplot(a,fit=stats.norm)
sns.distplot(b,fit=stats.norm)

# ex) 영업사원과 감사부사원의 하루 출장비에 차이가 있는지 검정하시오(유의수준 0.10)
# sales : 131,135,146,165,136,142
# audits : 130,102,129,143,149,120,139
# 영업부서가 감사부서보다 출장비가 많다고 할 수 있는가? (단측검정)
sales = [131,135,146,165,136,142]
audits = [130,102,129,143,149,120,139]

# 귀무가설 : 영업부서가 감사부서보다 출장비가 많지 않다
# 대립가설 : 영업부서가 감사부서보다 출장비가 많다

# 정규성
result1 = stats.shapiro(sales)
result2 = stats.shapiro(audits)
print(result1)
print(result2)

# 등분산성
result3 = stats.bartlett(sales,audits)
print(result3)

# 독립표본 t 검정
result4 = stats.ttest_ind(sales,audits)
print(result4)
# ttest_ind함수의 결과는 양측검정을 위한 값임
# => 단측검정one-sided이므로 p-value/2 로 비교홤
# 0.153 / 2 => 0.0765~~ 
# => 유의 확률 0.10보다 작으므로 귀무가설 기각 => 영업부 출장비가 많을 확률이 높음

"""# 크다 작다 => 단측검증
# 사실인가 아닌가 => 양측검증
"""

# ex) 어떤 회사에서는 종이타올의 흡수성을 시험하는 종이다. 종이타올을 액체용기에 담아 
# 2분동안의 흡수율을 체크하였고 그 결과가 다음과 같을때 두 회사의 종이 흡수율에
# 차이가 존재하는가 ? 유의수준 0.10에서 검정하시오      (양측검정)
x = [8,8,3,1,9,7,5,5,12]
y = [12,11,10,6,8,9,9,10,11,9,8,10]

# 귀무가설 : 
# 대립가설 :

# ex) 모델회사의 두 모델 수입이 다음과 같을때
# kim이라는 모델이 park 이라는 모델의 수입보다
# 크다고 할수 있는지 유의수준 0.05로 검정하시오   (단측검정)
kim = [5, 4.5, 3.4, 3.4, 6, 3.3, 4.5, 4.6, 3.5, 5.2, 4.8, 4.4, 4.6, 3.6, 5.0] 
park = [3.1, 3.7, 3.6, 4.0, 3.8, 3.8, 5.9, 4.9, 3.6, 3.6, 2.3, 4.0]

result1 = stats.shapiro(kim)
result2 = stats.shapiro(park)
result3 = stats.bartlett(kim,park)
print(result1)
print(result2)
print(result3)

t,p = stats.ttest_ind(kim,park)
print(p,p/2)

# => 귀무가설 채택
# => kim의 수입이 park의 수입보다 크지 않다

"""# 짝paired 표본을 이용한 가설검정
* 동일한 집단의 전/후 차이를 비교하기 위해 사용 => 단일모집단에서
* 짝paired 표본 : 동일한 모집단으로 부터 추출된 서로 연관있는 2개의 표본을 의미

* t.test 함수에 paired 속성을 사용

* 주의점 : 짝paired 표본의 갯수는 서로 동일해야 함
* 파이썬에서는 ttest_rel 함수를 사용해서 짝표본 t검정 시행
"""

# ex) 10명 학생의 과외 받기 전/후 수학 
# 성적차이를 비교하시오 (유의수준 0.05)

before = [16, 20, 21, 22, 23, 22, 27, 25, 27, 28] 
after = [19, 22, 24, 24, 25, 25, 26, 26, 28, 32]

# 정규성 등분산성 확인
print(stats.shapiro(before))
print(stats.shapiro(after))
print(stats.bartlett(before,after))

# 짝표본 t 검정
print(stats.ttest_rel(before,after))
# 귀무가설 기각 ->  과외를 받고 난후 수학성적의 차이가 존재할 확률이 높음

# ex) 상호금융회사는 부동산 가치 평가를 위해
# 2개의 평가회사를 고용했음
# 임의로 10채의 주택을 추출해서 각 회사에
# 주택 가치평가 의뢰 - 가치 평가 차이가 있는가?
#   유의수준 0.05로 검정하시오  
woori = [235, 210, 231, 242, 205, 230, 231, 210, 225, 249]
shinhan = [228, 205, 219, 240, 198, 223, 227, 215, 222, 245]

# 귀무가설 : 차이가 없다
# 대립가설 : 차이가 있다

print(stats.shapiro(woori))
print(stats.shapiro(shinhan))
print(stats.bartlett(woori,shinhan))

print(stats.ttest_rel(woori,shinhan))

# ex) 12명의 영업사원에게 인센티브 지급 전/후
# 주급 증가여부 확인하려 한다
# 인센티브 지급 후 주급은 증가했는지를
# 유의수준 0.05로 검정하시오

before = [320, 290, 421, 510, 210, 402, 625, 560, 360, 431, 506, 505]
after = [340, 285, 475, 510, 210, 500, 631, 560, 365, 431, 525, 619]

print(stats.shapiro(before))
print(stats.shapiro(after))
print(stats.bartlett(before,after))

t,p = stats.ttest_rel(before,after)
print(p,p/2)

# 유의 수준이 0.025이므로 귀무가설이 기각되었다
# 대립가설 채택 => 12명 영업사원의 주급이 증가함